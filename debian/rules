#!/usr/bin/make -f

include /usr/share/dpkg/architecture.mk
include /usr/share/dpkg/pkg-info.mk

ifneq ($(DEB_BUILD_GNU_TYPE),$(DEB_HOST_GNU_TYPE))
CROSS_COMPILE ?= $(DEB_HOST_GNU_TYPE)-
endif

ifneq (,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
NJOBS := -j $(patsubst parallel=%,%,$(filter parallel=%,$(DEB_BUILD_OPTIONS)))
else
NJOBS := -j $(shell nproc)
endif

KDEB_PKGVERSION := $(shell dpkg-parsechangelog -SVersion -l debian/changelog | sed 's/-.*//')
PATCH_VERSION := $(shell dpkg-parsechangelog -SVersion -l debian/changelog | sed 's/.*-//')

srctree ?= .

config:
	@echo $(PATCH_VERSION)-1 | bc > .version
	@touch .scmversion
	$(MAKE) rockchip_linux_defconfig \
	  CROSS_COMPILE=$(CROSS_COMPILE) \
	  ARCH=arm64 \
	  $(NJOBS)

	# kernel dbg build can be automatically activated
	scripts/config --undefine DB_SCRIPTS
	scripts/config --undefine DEBUG_INFO
	scripts/config --undefine DEBUG_INFO_SPLIT
	scripts/config --undefine DEBUG_INFO_REDUCED
	scripts/config --undefine DEBUG_INFO_COMPRESSED
	scripts/config --set-val  DEBUG_INFO_NONE y
	scripts/config --set-val  DEBUG_INFO_DWARF4 n
	scripts/config --set-val  DEBUG_INFO_DWARF5 n
	scripts/config --set-val  DEBUG_INFO_DWARF_TOOLCHAIN_DEFAULT n

build-indep:
build-arch: config
	$(MAKE) -f $(srctree)/Makefile \
	  KERNELRELEASE=$(KDEB_PKGVERSION)-rockchip \
	  KDEB_PKGVERSION=$(KDEB_PKGVERSION)-$(PATCH_VERSION) \
	  CROSS_COMPILE=$(CROSS_COMPILE) \
	  ARCH=arm64 \
	  $(NJOBS)

build: build-arch

binary-indep:
binary-arch: build-arch
	$(MAKE) -f $(srctree)/Makefile intdeb-pkg \
	  KERNELRELEASE=$(KDEB_PKGVERSION)-rockchip \
	  KDEB_PKGVERSION=$(KDEB_PKGVERSION)-$(PATCH_VERSION) \
	  CROSS_COMPILE=$(CROSS_COMPILE) \
	  ARCH=arm64 \
	  $(NJOBS)

clean:
	@rm -rf debian/*tmp debian/files
	$(MAKE) clean

binary: binary-arch
